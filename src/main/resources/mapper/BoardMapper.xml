<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerstudy1.example.mapper.BoardMapper">

	<!-- 목록 불러오기 -->
	<select id="selectBoardList" resultType="Board">
		SELECT	@b_rownum := @b_rownum -1 AS b_rownum,
				b_id as bId,
				b_title as bTitle,
				b_content as bContent,
				b_writer as bWriter,
				b_datetime as bDatetime,
				b_view as bView,
				b_group as bGroup,
				b_order as bOrder,
				b_depth as bDepth
				
		FROM	lc_board as ta, 
				(SELECT @b_rownum := (SELECT COUNT(*)-#{pageNum}+1 FROM lc_board )) tb
				
		ORDER BY	b_group desc, b_order asc
		
		LIMIT	#{pageNum}, 5
	</select>
	
		<select id="selectSearchPost" resultType="Board" parameterType="Pagination">
		SELECT		@b_rownum := @b_rownum -1 AS b_rownum,
					b_id as bId,
					b_title as bTitle,
					b_content as bContent,
					b_writer as bWriter,
					b_datetime as bDatetime,
					b_view as bView,
					b_group as bGroup,
					b_order as bOrder,
					b_depth as bDepth
				
		FROM		lc_board as ta, 
					(SELECT @b_rownum := (SELECT COUNT(*)-#{pageNum}+1 FROM lc_board )) tb
				
		WHERE		${search.optionSelect} LIKE CONCAT ('%', #{search.searchText}, '%')
		
		ORDER BY	b_group desc, b_order asc
		
		LIMIT		#{pageNum}, 5
	</select>
	
	<!-- 글 등록 -->
	<insert id="RegistBoard" parameterType="Board">	
		 INSERT INTO 	lc_board(
						b_title,
						b_content,
		 				b_writer,
		 				b_group,
		 				b_order,
		 				b_depth	
		 
	 	) VALUES (
	 		#{bTitle},
	 		#{bContent},
	 		#{bWriter},
	 		#{bGroup},
	 		#{bOrder},
	 		#{bDepth}
	 	)
		<selectKey keyProperty="bId" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
 	</insert>
	
	<!-- 게시글 수 -->
	<select id="boardCount" resultType="int">
		SELECT COUNT(*) as count
		FROM	lc_board
	</select>
	
	<!-- 검색된 게시글 수 -->
	<select id="searchCount" resultType="int" parameterType="Search">
		SELECT 	COUNT(*) as count
		FROM 	lc_board
		WHERE 	${optionSelect} LIKE CONCAT ('%', #{searchText}, '%')
		
	</select>
	
	<!-- 글 보기 -->
	<select id="detailBoardList" resultType="Board">
		SELECT	b_id as bId,
				b_title as bTitle,
				b_content as bContent,
				b_writer as bWriter,
				b_datetime as bDatetime,
				b_view as bView,
				b_group as bGroup,
				b_order as bOrder,
				b_depth as bDepth			
				
		FROM	lc_board
		WHERE	1=1
		AND		b_id = #{bId}
	</select>
	
	<!-- 답글 순서 조정 -->
 	<update id="updateReply">
 		UPDATE 	lc_board
 		SET 	b_order = b_order+1 
 		WHERE 	b_group = #{bGroup} 
 		AND 	b_id != LAST_INSERT_ID()
 		AND 	b_order >= #{bOrder}
 	</update>
	
	<!--  조회수 증가 -->
	<update id="updatebView">
		UPDATE 	lc_board
		SET		b_view = b_view + 1
		WHERE	1=1
		AND		b_id = #{bId}
	</update>
	
	<!-- 부모글 그룹값 부여 -->
	<update id="updatebGroup">
		UPDATE 	lc_board
		SET		b_group = #{bId}
		WHERE	1=1
		AND		b_id = #{bId}
	</update>
	
	<!-- 글 수정 -->
	<update id="editBoard">
		UPDATE	lc_board
		SET		b_title = #{bTitle}, b_content = #{bContent}
		WHERE 	1=1
		AND		b_id = #{bId}
	</update>
	
	<!-- 답글 삭제 -->
	<delete id="delReplyBoard">
		DELETE FROM	lc_board
		WHERE	1=1
		AND		b_id = #{bId}
	</delete>
	
	<!-- 원글 삭제 -->
	<delete id="delOriginBoard">
		DELETE FROM	lc_board
		WHERE	1=1
		AND		b_group = #{bGroup}
	</delete>
	
	
	<!-- 댓글 불러오기 -->
	<select id="SelectCommentList" resultType="Board">
		SELECT 	c_id as cId,
				c_writer as cWriter,
				c_content as cContent,
				c_group as cGroup,
				c_order as cOrder,
				c_depth as cDepth,
				c_datetime as cDatetime,
				c_isedit as cIsedit
		
		FROM 	lc_comment
		WHERE	1=1
		AND 	b_id = #{bId}
		
		ORDER BY c_group desc, c_order asc
					
	</select>	
	<!-- 댓글 작성 -->
	<insert id="RegistComment" parameterType="Board">
		INSERT INTO	lc_comment(
					c_writer,
					c_content,
					c_group,
					c_order,
					c_depth,
					b_id
					
		) VALUES(
			#{cWriter},
			#{cContent},
			#{cGroup},
			#{cOrder},
			#{cDepth},
			#{bId}
		)
		<selectKey keyProperty="cId" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>			
	</insert>
	
	<!-- 부모댓글 그룹값 부여 -->
	<update id="updatecGroup">
		UPDATE 	lc_comment
		SET		c_group = #{cId}
		WHERE	1=1
		AND		c_id = #{cId}
	</update>
		
	<!-- 댓글 순서 변경 -->
	<update id="updatecOrder">
		UPDATE	lc_comment
		SET		c_order = c_order+1
		WHERE 	c_id = #{cGroup}
		AND		c_id != LAST_INSERT_ID()
		AND		c_order >= #{cOrder}
	</update>
	
	<!-- 댓글 수정 -->
	<update id="editComment">
		UPDATE 	lc_comment
		SET		c_content = #{cContent}, c_isedit = c_isedit + 1
		WHERE 	1=1
		AND		c_id = #{cId}
	
	</update>
	
	<!-- 대댓글 삭제 -->
	<delete id="delReplyComment">
		DELETE FROM	lc_comment
		WHERE	1=1
		AND		c_id = #{cId}
	</delete>
	
	<!-- 원댓글 삭제 -->
	<delete id="delOriginComment">
		DELETE FROM	lc_comment
		WHERE	1=1
		AND		c_group = #{cGroup}
	</delete>
	
	
</mapper>