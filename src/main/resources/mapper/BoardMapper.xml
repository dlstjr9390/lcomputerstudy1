<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerstudy1.example.mapper.BoardMapper">

	<!-- Board resultmap -->
	<resultMap type="com.lcomputerstudy1.example.domain.Board" id="BoardMap">
		<result property="b_rownum" column="b_rownum"></result>
		<result property="bId" column="b_id"></result>
		<result property="bTitle" column="b_title"></result>
		<result property="bContent" column="b_content"></result>
		<result property="bWriter" column="b_writer"></result>
		<result property="bDatetime" column="b_datetime"></result>
		<result property="bView" column="b_view"></result>
		<result property="bGroup" column="b_group"></result>
		<result property="bOrder" column="b_order"></result>
		<result property="bDepth" column="b_depth"></result>
		<result property="bEditid" column="b_editid"></result>	
		
		<collection property="files" ofType="BoardFile" javaType="java.util.List">
			<result property="filename" column="f_filename"></result>
			<result property="convertname" column="f_convertname"></result>
			<result property="fsize" column="f_size"></result>
			<result property="b_idx" column="b_idx"></result>
			<result property="fEditid" column="f_editid"></result> 	
		</collection>	
	</resultMap>
	
	

	<!-- 목록 불러오기 -->
	<select id="selectBoardList" resultMap="BoardMap">
		SELECT	@b_rownum := @b_rownum -1 AS b_rownum,
				b_id,
				b_title,
				b_writer,
				b_datetime,
				b_view,
				b_group,
				b_order,
				b_depth,
				b_editid
				
		FROM	lc_board as ta, 
				(SELECT @b_rownum := (SELECT COUNT(*)-#{pageNum}+1 FROM lc_board )) tb
				
		ORDER BY	b_group desc, b_order asc
		
		LIMIT	#{pageNum}, 5
	</select>
	
		<select id="selectSearchPost" resultMap="BoardMap">
		SELECT	@b_rownum := @b_rownum -1 AS b_rownum,
				b_id,
				b_title,
				b_writer,
				b_datetime,
				b_view,
				b_group,
				b_order,
				b_depth,
				b_editid
				
		FROM		lc_board as ta, 
					(SELECT @b_rownum := (SELECT COUNT(*)-#{pageNum}+1 FROM lc_board )) tb
				
		<where>
			<if test="search.optionSelect == 'b_title'">
				b_title like '%${search.searchText}%'
			</if>
			<if test="search.optionSelect == 'b_content'">
				b_title like '%${search.searchText}%'
				OR b_content like '%${search.searchText}%'
			</if>
			<if test="search.optionSelect == 'b_writer'">
				b_writer like '%${search.searchText}%'
			</if>
		</where>
				
		ORDER BY	b_group desc, b_order asc
		
		LIMIT		#{pageNum}, 5
	</select>
	
	<!-- 글 등록 -->
	<insert id="RegistBoard" parameterType="Board">	
		 INSERT INTO 	lc_board(
						b_title,
						b_content,
		 				b_writer,
		 				b_group,
		 				b_order,
		 				b_depth	
		 
	 	) VALUES (
	 		#{bTitle},
	 		#{bContent},
	 		#{bWriter},
	 		#{bGroup},
	 		#{bOrder},
	 		#{bDepth}
	 	)
		<selectKey keyProperty="bId" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
 	</insert>
 	
 	<!-- 파일 DB등록 -->
 	<insert id="registfile" parameterType="BoardFile">
 		INSERT INTO	 	lc_file(
 						f_filename,
 						f_convertname,
 						f_size,
 						b_idx,
 						f_editid
 
 		) VALUES (
 			#{filename},
 			#{convertname},
 			#{fsize},
 			#{b_idx},
 			#{fEditid}
 		)
 	</insert>
 	
 	<!-- 첨부파일 목록 -->
 	<select id="selectFile" resultType="BoardFile">
 		SELECT 	f_filename as filename,
 				f_convertname as convertname,
 				f_size as fsize,
 				b_idx as b_idx,
 				f_editid as fEditid
 				
 		FROM 	lc_file
		WHERE	b_idx =	#{bId}
		AND		f_editid = #{bEditid}
	
 	</select>
	
	<!-- 게시글 수 -->
	<select id="boardCount" resultType="int">
		SELECT COUNT(*) as count
		FROM	lc_board
	</select>
	
	<!-- 검색된 게시글 수 -->
	<select id="searchCount" resultType="int">
		SELECT 	COUNT(*) as count
		FROM 	lc_board
		<where>
			<if test="optionSelect == 'b_title'">
				b_title like '%${searchText}%'
			</if>
			<if test="optionSelect == 'b_content'">
				b_title like '%${searchText}%'
				OR b_content like '%${searchText}%'
			</if>
			<if test="optionSelect == 'b_writer'">
				b_writer like '%${searchText}%'
			</if>
		</where>
		
	</select>
	
	<!-- 글 보기 -->
	<select id="detailBoardList" resultMap="BoardMap">
		SELECT	b_id,
				b_title,
				b_content,
				b_writer,
				b_datetime,
				b_view,
				b_group,
				b_order,
				b_depth,
				b_editid		
				
		FROM	lc_board
		WHERE	1=1
		AND		b_id = #{bId}
	</select>
	
	<!-- 답글 순서 조정 -->
 	<update id="updateReply">
 		UPDATE 	lc_board
 		SET 	b_order = b_order+1 
 		WHERE 	b_group = #{bGroup} 
 		AND 	b_id != LAST_INSERT_ID()
 		AND 	b_order >= #{bOrder}
 	</update>
	
	<!--  조회수 증가 -->
	<update id="updatebView">
		UPDATE 	lc_board
		SET		b_view = b_view + 1
		WHERE	1=1
		AND		b_id = #{bId}
	</update>
	
	<!-- 부모글 그룹값 부여 -->
	<update id="updatebGroup">
		UPDATE 	lc_board
		SET		b_group = #{bId}
		WHERE	1=1
		AND		b_id = #{bId}
	</update>
	
	<!-- 글 수정 -->
	<update id="editBoard">
		UPDATE	lc_board
		SET		b_title = #{bTitle}, b_content = #{bContent}, b_editid = b_editid + 1
		WHERE 	1=1
		AND		b_id = #{bId}
	</update>
	
	<!-- 글 수정 id -->
	<select id="isEdit" resultType="int">
		SELECT 	b_Editid as bEditid
		FROM	lc_board
		WHERE	b_id = #{bId}
	</select>
	<!-- 답글 삭제 -->
	<delete id="delReplyBoard">
		DELETE FROM	lc_board
		WHERE	1=1
		AND		b_id = #{bId}
	</delete>
	
	<!-- 원글 삭제 -->
	<delete id="delOriginBoard">
		DELETE FROM	lc_board
		WHERE	1=1
		AND		b_group = #{bGroup}
	</delete>
	
	<!-- 이미지 파일 삭제 -->
	<delete id="delImageFile">
		DELETE FROM lc_file
		WHERE b_idx = #{bId}
	</delete>
	
	
	<!-- 댓글 불러오기 -->
	<select id="SelectCommentList" resultType="Board">
		SELECT 	c_id as cId,
				c_writer as cWriter,
				c_content as cContent,
				c_group as cGroup,
				c_order as cOrder,
				c_depth as cDepth,
				c_datetime as cDatetime,
				c_isedit as cIsedit
		
		FROM 	lc_comment
		WHERE	1=1
		AND 	b_id = #{bId}
		
		ORDER BY c_group desc, c_order asc
					
	</select>	
	<!-- 댓글 작성 -->
	<insert id="RegistComment" parameterType="Board">
		INSERT INTO	lc_comment(
					c_writer,
					c_content,
					c_group,
					c_order,
					c_depth,
					b_id
					
		) VALUES(
			#{cWriter},
			#{cContent},
			#{cGroup},
			#{cOrder},
			#{cDepth},
			#{bId}
		)
		<selectKey keyProperty="cId" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>			
	</insert>
	
	<!-- 부모댓글 그룹값 부여 -->
	<update id="updatecGroup">
		UPDATE 	lc_comment
		SET		c_group = #{cId}
		WHERE	1=1
		AND		c_id = #{cId}
	</update>
		
	<!-- 댓글 순서 변경 -->
	<update id="updatecOrder">
		UPDATE	lc_comment
		SET		c_order = c_order+1
		WHERE 	c_id = #{cGroup}
		AND		c_id != LAST_INSERT_ID()
		AND		c_order >= #{cOrder}
	</update>
	
	<!-- 댓글 수정 -->
	<update id="editComment">
		UPDATE 	lc_comment
		SET		c_content = #{cContent}, c_isedit = c_isedit + 1
		WHERE 	1=1
		AND		c_id = #{cId}
	
	</update>
	
	<!-- 대댓글 삭제 -->
	<delete id="delReplyComment">
		DELETE FROM	lc_comment
		WHERE	1=1
		AND		c_id = #{cId}
	</delete>
	
	
	<!-- 원댓글 삭제 -->
	<delete id="delOriginComment">
		DELETE FROM	lc_comment
		WHERE	1=1
		AND		c_group = #{cGroup}
	</delete>
	
	
</mapper>